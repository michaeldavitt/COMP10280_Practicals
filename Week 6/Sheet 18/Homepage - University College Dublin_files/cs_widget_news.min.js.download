// ---------- Slim Announcements Widget ----------
// ---------------------------------

// ---------- Global Variable Declaration (JSLint - Do Not Delete) ----------
/* global moment, libVal*/

// ---------- Embedded Widget Variables ----------
var widget = parent.replaceStringsNews;
var roleDefs = parent.roleDefinitionsNews;

// ---------- Configuration Variables ----------
var widgetAggregation = false; // set true if news from ALL user enrolled courses necessary
var widgetAggregationOuLimit = 100; // 0 for unlimited. If limit is reached then either don't aggregate at all or aggregate just the limited OU count (see thew showIncompleteNewsAggregate option)
var showIncompleteNewsAggregate = false; // false to hide aggregated news if OU limit is passed. true to show all news from collected OU's even if it is an incomplete list of OU's
var shortenNewsPost = true; // set to true to shorten the post using the showChar var below
var linkTitleToNews = true; // set true if you require the news title to link to the news post
var showOuLink = false; // set to true if you want a link to the org unit the news item was posted in
var showHTMLNews = false; // set to false to show plain text or true to show HTML
var showReadmore = true; // set to true if you want the shortened post to be expandable
var showControls = true; // set true to display controls for admins   
var showNewsTitle = false; // set to true to show the My News heading
var showViewNewsLink = true; // set to true to show bottom link that takes you to the News page
var showChar = 280; // How many characters are shown by default when the post is shortened
var ellipsestext = "..."; // The characters used to signify that there is more to the post
var NEWS_ITEM_DISPLAY_MAX = 3; // set the maximum number of news items to display
var newsImageDefaultSharedFiles = "news-img-default-shared.jpeg";
var newsImageDefaultCourseFiles = "";
var validEnrollmentOrgUnitTypeIds = "1,3"; // This should be a CSV string, not an array. 3 = course offering. 1 = org. Other ID's are custom and you will need to look it up.
var noNewsString = "There are no announcements to display.";
var showNewsDismiss = true; // set to true to show the X to dismiss a news post. Exclude certain roles using hideNewsDismissRoles below
var hideNewsDismissRoles = []; // Match widget.html roles. Possible values: "administrator", "moderator", "instructor", "learner"
var configDataPath = widget.orgUnit.path + "custom_widgets/lcs_widgets/widgets/news/slim_announcements_config.txt";
var configData = [];
var hideExpiredNews = true;
var hideNewsBeforeStartDate = true;

var localPath = "lcs_widgets";
var sharedImagePath = '/shared/custom_widgets/' + localPath + '/widgets/news/img/';
var courseImagePath = widget.orgUnit.path + 'custom_widgets/' + localPath + '/assets/img/';
var defaultImagePath = '';

// ---------- Global Variables ----------
var hideDismissOrgRoles = [];
var relevantNewsOuCount;
var addedNewsOuCount = 0;
var enrollmentOuCount = 0;
var relevantNews = [];
var Enrollments = Enrollments || [];
var News = News || {};
var moretext = "Read More";
var lesstext = "Read Less";

// ---------- Functions ----------
function processEnrollments() {
   var dataAugment = {
      ouId: widget.orgUnit.id,
      ouName: widget.orgUnit.name
   };
   
   libVal.get.news(dataAugment.ouId, undefined, addRelevantNews, dataAugment);
   relevantNewsOuCount = 1;
   if (widgetAggregation) {
      var counterLimit = Enrollments.length;
      relevantNewsOuCount += enrollmentOuCount;
      counterLimit = enrollmentOuCount;
            
      for (var i = 0; i < counterLimit; i++) {         
         var orgUnitId = Enrollments[i].OrgUnit.Id;
         var orgUnitName = Enrollments[i].OrgUnit.Name;
         dataAugment = {
            ouId: orgUnitId,
            ouName: orgUnitName
         };
         
         if (orgUnitId !== widget.orgUnit.id) { // already gor news for it above
            libVal.get.news(dataAugment.ouId, undefined, addRelevantNews, dataAugment);
         } else {
            relevantNewsOuCount--;
         }
      }
      
   }   
}


function addRelevantNews (newsArray, dataAugment) {
   addedNewsOuCount++;
   for (var i = 0; i < newsArray.length; i++) {
      newsArray[i].ouId = dataAugment.ouId;
      newsArray[i].ouName = dataAugment.ouName;
      relevantNews.push(newsArray[i]);            
   }
   if (addedNewsOuCount === relevantNewsOuCount) {
      processRelevantNews(relevantNews);
   }
}

function processRelevantNews (array) {
   var relevantNewsItems = [];
   var sortedNewsItems = array.sort(function(a, b) {
      var dateA = new Date(a.StartDate),
         dateB = new Date(b.StartDate);

      return dateB - dateA;
   });

   // filter out all hidden news items & expired news items (if necessary) from array   
   for (var i = 0; i < sortedNewsItems.length; i++) {
      
      var showItem = true;
      var unixDateNow = new Date(Date.now()).getTime();
      var unixNewsItemEndDate = new Date(sortedNewsItems[i].EndDate).getTime();
      var unixNewsItemStartDate = new Date(sortedNewsItems[i].StartDate).getTime();

      // Draft
      if (sortedNewsItems[i].IsHidden === true) {
         showItem = false;
      }
         
      // Hide expired news (optional)
      if (showItem && hideExpiredNews && (unixDateNow > unixNewsItemEndDate) && unixNewsItemEndDate !== 0) {
          showItem = false;
      }
      
      // Hide news if now is before the start date
      if (showItem && hideNewsBeforeStartDate && (unixDateNow < unixNewsItemStartDate) && unixNewsItemStartDate !== 0) {
          showItem = false;
      }

      if (showItem) {
         relevantNewsItems.push(sortedNewsItems[i]);
      }      
   }

   displayNews(relevantNewsItems);
}

function replaceSpaceChars () {
   return function(i, h) {
      return h.replace(/&nbsp;/g, ' ');
   }
}

function getOrgRoleNames (widgetRole) {
   var roles = [];
   if (roleDefs.hasOwnProperty(widgetRole)) {
      roles = roleDefs[widgetRole];
   }
   return roles;
}

function displayNews(news) {
   var newsControls = $(".news-controls"),
      newsControlsBot = $(".news-control-bot"),
      newsFeed = $(".news-feed-list"),
      newsItemHtml = "",
      newsItemsDisplayed = 0;

   var newsPostId, newsPostOuId, newsPostHeadTitle, newsPostHeadDate, newsPostBody, newsPostOuName;

   News.data = news;

   if (roleDefs.moderator.indexOf(widget.role.name) > -1 && showControls === true) {
      newsControls.show();

   } else {
      newsControls.hide();
      newsControlsBot.show();
   }
   $(".news-control-reorder").hide();

   // update news-controls link href values
   $(".news-control-create").attr("href", "/d2l/lms/news/newedit.d2l?ou=" + widget.orgUnit.id + "&global=0");
   $(".news-control-reorder").attr("href", "/d2l/lms/news/reorder.d2l?ou=" + widget.orgUnit.id);
   $(".news-control-view-all").attr("href", "/d2l/lms/news/main.d2l?ou=" + widget.orgUnit.id);

   $(".news-control-create").css('color', configData.headingColorHex);
   $(".news-control-reorder").css('color', configData.headingColorHex);

   if (News.data.length === 0) {
      $('.news-feed').closest('div').append('<p class="no-news">' + noNewsString + '</p>')
   }
   
   for (var j = 0; j < hideNewsDismissRoles.length; j++) {
      hideDismissOrgRoles = hideDismissOrgRoles.concat(getOrgRoleNames(hideNewsDismissRoles[j]));
   }
   
   for (var i = 0; i < News.data.length; i++) {
      newsPostId = News.data[i].Id;
      newsPostOuId = News.data[i].ouId;
      newsPostOuName = News.data[i].ouName;
      newsPostHeadTitle = News.data[i].Title;
      newsPostHeadDate = moment(News.data[i].StartDate).format("dddd, MMMM Do, YYYY [at] h:mm A")

      if (showHTMLNews) {
         newsPostBody = News.data[i].Body.Html;
      } else {
         newsPostBody = decodeHtml(News.data[i].Body.Text);
      }

      var newsimg = $(News.data[i].Body.Html).find('img');
      var img = new Image();

      
      if ($(newsimg).attr("src") === undefined) {
         // no img, so load default img
         newsItemHtml = '<li data-news-id="' + newsPostId + '"><div class="row news-list-item"id="news-item-' + i + '"><div class="col-xs-3 hidden-xxs-custom"><img src="' + defaultImagePath + '" class="news-post-image"></div><div class="col-xs-9 col-xxs-12-custom">';
      } else {
         // there is an img in the news item, so try loading it
         // load default img on error
         var tileimage = $(newsimg).attr("src");
         img.src = $(newsimg).attr("src");
         img.i = i;
         img.tileimage = tileimage;
         newsItemHtml = '<li data-news-id="' + newsPostId + '"><div class="row news-list-item" id="news-item-' + i + '"><div class="col-xs-3 hidden-xxs-custom"><img src="' + img.src + '" class="news-post-image" onerror="this.onerror=null;this.src=\'' + defaultImagePath + '\';"></div><div class="col-xs-9 col-xxs-12-custom">';
      }

      if (showNewsDismiss && hideDismissOrgRoles.indexOf(widget.role.name) === -1) {
         newsItemHtml += '<a class="news-control-item-dismiss" href="javascript:;" title="Dismiss ' + newsPostHeadTitle + '" data-attr="' + newsPostId + '" data-ouId="' + newsPostOuId + '"><img src="img/News.Main.actHide.svg" class="dismiss-img"></a>';
      }

      if (linkTitleToNews) {
         newsItemHtml += '<h2 tabindex="0"><a class="news-link" href="/d2l/le/news/' + widget.orgUnit.id + '/' + newsPostId + '/view" target="_top">' + newsPostHeadTitle + '</a></h2>';
      } else {
         newsItemHtml += '<h2 tabindex="0">"' + newsPostHeadTitle + '"</h2>';
      }

      if (newsPostBody.length > showChar && shortenNewsPost) {
         var c;

         //trim the string to the maximum length
         c = newsPostBody.substr(0, showChar);
         //re-trim if we are in the middle of a word
         if (Math.min(c.length, c.lastIndexOf(" ")) !== -1) {
            c = c.substr(0, Math.min(c.length, c.lastIndexOf(" ")));
         }

         newsPostBody = c + '<span class="more-ellipses">' + ellipsestext + '&nbsp;</span>';
         if (showReadmore) {
            newsPostBody += '<a target="_blank" class="read-more-post" href="/d2l/le/news/' + widget.orgUnit.id + '/' + newsPostId + '/view" title="Read More of ' + newsPostHeadTitle + ' news post" tabindex="0">' + moretext + '</a>';
         }

      }

      newsItemHtml += '<p class="news-date" tabindex="0">Posted ' + newsPostHeadDate;
      if (showOuLink) {
         newsItemHtml += ' to <a target="_top" href="/d2l/lp/ouHome/home.d2l?ou=' + newsPostOuId + '">' + newsPostOuName + '</a>';
      }
      newsItemHtml += '</p>';
      newsItemHtml += '<p class="pbody">' + newsPostBody + '</p></div></div></li>';

      newsFeed.append(newsItemHtml);
      
      /* some text that has used decodeHtml function still has &nbsp; so look for them and remove them  */      
      $('.pbody').html(replaceSpaceChars());
      $('.news-link').css('color', configData.headingColorHex);
      $('.read-more-post').css('color', configData.headingColorHex);
      newsItemsDisplayed++;

      if (newsItemsDisplayed === NEWS_ITEM_DISPLAY_MAX) {
         break;
      }

   }

   if (showNewsTitle) {
      $(".news-title").show();
      $('.widget-title').css('color', configData.headingColorHex)
   }

   if (showViewNewsLink) {
      $(".news-controls-bot").show();
      $('.news-control-view-all').css('color', configData.headingColorHex)
   }

   resizeFrame();
   setTimeout(resizeFrame, 500);
}

function decodeHtml(html) {
   var txt = document.createElement("textarea");
   txt.innerHTML = html;

   return txt.value;
}

var resizeId;
$(window).resize(function() {
   clearTimeout(resizeId);
   resizeId = setTimeout(resizeFrame, 500);
});

function resizeFrame() {
   $("#cs-widget-news", window.parent.document).height($(".container-fluid").outerHeight() + 45 + "px");
}

function setEnrollmentData (data) {   
   Array.prototype.push.apply(Enrollments, data.Items);
   enrollmentOuCount += data.Items.length;
   if (data.PagingInfo.HasMoreItems && (widgetAggregationOuLimit === 0 || enrollmentOuCount < widgetAggregationOuLimit)) {
      getEnrollments (data.PagingInfo.Bookmark);
   } else if (data.PagingInfo.HasMoreItems) {      
      if (!showIncompleteNewsAggregate) {
         widgetAggregation = false;
      }
      processEnrollments();
   } else {
      processEnrollments();
   }
}

function getEnrollments (bookmark) {
   // Sorting by OrgUnitId (desc) will typically get more recently created OU's
   var enrollmentProperties = {
      "orgUnitTypeId": validEnrollmentOrgUnitTypeIds,
      "sortBy": "-OrgUnitId",
      "canAccess": "true"
   };   
   if (bookmark) {
      enrollmentProperties.bookmark = bookmark;
   }
   libVal.reqFormatParams = true;
   libVal.apiVersion = '1.14';
   libVal.get.myEnrollments(enrollmentProperties, setEnrollmentData, undefined);
}

$(document).ready(function() {
   $.getJSON(configDataPath, function(hdata) {
      configData = hdata.News;
      NEWS_ITEM_DISPLAY_MAX = configData.newsItemDisplayMax; // set the maximum number of news items to display

      if (configData.hideNewsDismissRoles !== undefined) {
         hideNewsDismissRoles = configData.hideNewsDismissRoles;
      }
       
      if (configData.widgetAggregation !== undefined) {
         widgetAggregation = configData.widgetAggregation;      
      }
       
      if (configData.newsImageDefaultSharedFiles !== undefined && configData.newsImageDefaultSharedFiles !== "") {
            newsImageDefaultSharedFiles = sharedImagePath + configData.newsImageDefaultSharedFiles;
      }
       
      if (configData.newsImageDefaultCourseFiles !== undefined && configData.newsImageDefaultCourseFiles !== "") {
            newsImageDefaultCourseFiles = courseImagePath + configData.newsImageDefaultCourseFiles;
      }
       
      if (configData.newsImageDefaultCourseFiles !== "") {
        defaultImagePath = newsImageDefaultCourseFiles;          
      } else {
        defaultImagePath = newsImageDefaultSharedFiles;
      }

      if (!widgetAggregation) {
          processEnrollments(); // no need to get enrollments          
      } else {
          getEnrollments();
      }
      
   }).fail(function() {
       defaultImagePath = sharedImagePath + newsImageDefaultSharedFiles;
       if (!widgetAggregation) {
          processEnrollments();
       } else {
          getEnrollments();
       }
   });

   $(document).on("click", ".news-control-item-dismiss", function() {
      var newsItemId = parseInt($(this).attr("data-attr"));
      var ouId = parseInt($(this).attr("data-ouId"));
   
      libVal.post.newsItemDismissal(ouId, newsItemId);
      $("li[data-news-id=\""+newsItemId+"\"]").remove();
   });

   $(document).on("click", ".more-link", function() {
      var widgetIframe = window.parent.$("#cs-widget-news iframe");
      var widgetIframeHeight = parseInt(widgetIframe.css("height"));

      var articleEl = $(this).parents("article");
      var moreContent = $(this).parent();


      if ($(this).hasClass("less")) {
         $(this).removeClass("less");
         $(this).html(moretext);

         articleEl.find(".more-content div").css("display", "none");
         articleEl.find(".more-ellipses").toggle();

         moreContent.attr("tabindex", "-1");

         widgetIframe.css("height", (widgetIframeHeight - 185) + "px");

      } else {
         $(this).addClass("less");
         $(this).html(lesstext);

         articleEl.find(".more-content").css("display", "inline");
         articleEl.find(".more-content div").css("display", "inline");
         articleEl.find(".more-ellipses").toggle();
         articleEl.find(".more-ellipses").parent().css("display", "inline");

         moreContent.attr("tabindex", "0");

         widgetIframe.css("height", (widgetIframeHeight + 185) + "px");
      }

      return false;
   });

});